{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Vscode\\\\code\\\\React\\\\demo1\\\\src\\\\TicTacToe\\\\Game.js\";\nimport React, { Component } from 'react';\nimport Board from './Board'; // 使用slice()函数为每一步创建squares数组副本，同时把这个数组当作不可变对象，\n// 这样就可以把所有squares数组的历史版本都保存下来了，然后可以在历史的步骤中随意跳转\n// 把历史的squares数组保存在另一个名为history的数组中，history数组保存了从第一步到最后一步所有棋盘状态\n// 再次状态提升到Game组件，把state从Board组件提升到顶层的Game组件里，这样Game组件就拥有了对Board组件数据的完全控制权\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.calculateWinner = squares => {\n      const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n          return squares[a];\n        }\n      }\n\n      return null;\n    };\n\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice(); // 如果已经判断出胜利者或者该方格已经被点过了，就不能再点了\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = this.calculateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner:' + winner;\n    } else {\n      status = 'Next player:' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["D:/Vscode/code/React/demo1/src/TicTacToe/Game.js"],"names":["React","Component","Board","Game","constructor","props","calculateWinner","squares","lines","i","length","a","b","c","state","history","Array","fill","xIsNext","handleClick","current","slice","setState","concat","render","winner","status"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Board from './Board'\r\n\r\n// 使用slice()函数为每一步创建squares数组副本，同时把这个数组当作不可变对象，\r\n// 这样就可以把所有squares数组的历史版本都保存下来了，然后可以在历史的步骤中随意跳转\r\n// 把历史的squares数组保存在另一个名为history的数组中，history数组保存了从第一步到最后一步所有棋盘状态\r\n// 再次状态提升到Game组件，把state从Board组件提升到顶层的Game组件里，这样Game组件就拥有了对Board组件数据的完全控制权\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            history:[{\r\n                squares: Array(9).fill(null)\r\n            }],\r\n            xIsNext:true\r\n        }\r\n    }\r\n\r\n    handleClick(i){\r\n        const history = this.state.history;\r\n        const current = history[history.length-1];\r\n        const squares = current.squares.slice();\r\n        // 如果已经判断出胜利者或者该方格已经被点过了，就不能再点了\r\n        if (calculateWinner(squares) || squares[i]){\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext?'X':'O';\r\n        this.setState({\r\n            history:history.concat([{\r\n                squares:squares\r\n            }]),\r\n            xIsNext: !this.state.xIsNext,\r\n        })\r\n    }\r\n\r\n    calculateWinner = (squares) =>{\r\n        const lines = [\r\n            [0,1,2],\r\n            [3,4,5],\r\n            [6,7,8],\r\n            [0,3,6],\r\n            [1,4,7],\r\n            [2,5,8],\r\n            [0,4,8],\r\n            [2,4,6],\r\n        ];\r\n        for (let i=0;i<lines.length;i++){\r\n            const [a,b,c] = lines[i];\r\n            if(squares[a] && squares[a]===squares[b] && squares[a]===squares[c]){\r\n                return squares[a];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() { \r\n        const history = this.state.history;\r\n        const current = history[history.length-1];\r\n        const winner = this.calculateWinner(current.squares);\r\n\r\n        let status;\r\n        if(winner){\r\n            status='Winner:'+winner;\r\n        }else{\r\n            status='Next player:' + (this.state.xIsNext?'X':'O');\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    {/* <Board /> */}\r\n                    <div>{status}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Game;"]},"metadata":{},"sourceType":"module"}